=head1 NAME

Web::DOM::CharacterData - DOM |CharacterData| object

=head1 DESCRIPTION

The C<Web::DOM::CharacterData> class implements the DOM
C<CharacterData> interface, which is inherited by L<Web::DOM::Text>,
L<Web::DOM::Comment>, and L<Web::DOM::ProcessingInstruction>.

=head1 METHODS

In addition to the methods of classes L<Web::DOM::EventTarget>,
L<Web::DOM::Node>, and L<Web::DOM::ChildNode>, following methods are
available:

=over 4

=item $node->append_data ($text)

Append the specified character string to the data of the node.  [DOM]

=item $node->delete_data ($offset, $count)

Delete the substring of the data of the node, specified by offset and
length.  Offset and length are interpreted as numbers of UTF-16 code
units.  [DOM]

Use of this method is discouraged.

=item $text = $node->data

=item $node->data ($text)

Return or set the text data of the node.  [DOM]

=item $node->insert_data ($offset, $data)

Insert a string at the specified location in the data of the node.
Offset is interpreted as numbers of UTF-16 code units.  [DOM]

Use of this method is discouraged.

=item $number = $node->length

Return the number of UTF-16 code units in the data of the node.  [DOM]

Use of this method is discouraged in favor of C<< length $node->data
>>.

=item $node->replace_data ($offset, $count, $data)

Replace the substring of the data of the node, specified by offset and
length by another string.  Offset and length are interpreted as
numbers of UTF-16 code units.  [DOM]

Use of this method is discouraged.

=item $text = $node->substring_data ($offset, $count)

Return the substring of the data of the node, identified by the
specified offset and length.  Offset and length are interpreted as
numbers of UTF-16 code units.  [DOM]

Use of this method is discouraged in favor of C<< substr $node->data,
$offset, $count >>.

=back

Most of methods are deprecated in favor of Perl's standard string
operations.  As DOM methods are defined in terms of UTF-16 code units
while Perl strings are sequences of utf8 characters, and as Web IDL
and Perl have different rules on interpretation of negative
offset/count values, they exhibits inconsistent behaviors with Perl's
standard string operations and they are not implemented in efficient
ways.  Moreover, these method can break surrogate pairs.  B<HOW THEY
INTERACT WITH CHARACTERS GREATER THAN U+FFFF IS SUBJECT TO CHANGE!>

Any C<CharacterData> object is an instance of one of its subclasses.
For example, a C<CharacterData> object whose C<node_type> is
C<TEXT_NODE> is an instance of L<Web::DOM::Text>.  There are following
subclasses:

L<Web::DOM::Text>, L<Web::DOM::Comment>, and
L<Web::DOM::ProcessingInstruction>.

=head1 SPECIFICATIONS

=over 4

=item DOM

DOM Living Standard
<http://dom.spec.whatwg.org/#interface-characterdata>.

=item DOMPERL

manakai's DOM Perl Binding
<http://suika.suikawiki.org/~wakaba/wiki/sw/n/manakai%27s%20DOM%20Perl%20Binding>.

=back

=head1 SEE ALSO

L<Web::DOM::Node>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2012-2014 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
