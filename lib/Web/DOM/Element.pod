=head1 NAME

Web::DOM::Element - DOM |Element| object

=head1 DESCRIPTION

The C<Web::DOM::Element> class implements the DOM C<Element>
interface.  It represents an element in the document.

=head1 METHODS

In addition to the methods of classes L<Web::DOM::EventTarget>,
L<Web::DOM::Node>, L<Web::DOM::ParentNode>, and
L<Web::DOM::ChildNode>, following methods are available:

=over 4

=item $map = $el->attributes

Return the L<Web::DOM::NamedNodeMap> object containing the content
attributes for the element.  [DOM]

=item $tokens = $el->class_list

Return the L<Web::DOM::TokenList> object for the C<class> attribute.
[DOM]

=item $string = $el->class_name

=item $el->class_name ($string)

Return or set the C<class> attribute.  [DOM]

=item $bool = $el->manakai_element_type_match ($nsurl, $local_name)

Return whether the namespace URL and local name are equal to the
specified values or not.  [MANAKAI]

=item $value = $el->get_attribute ($name)

Return the value of the specified attribute.  If there is no attribute
with the specified name, C<undef> is returned.  [DOM]

=item $arrayref = $el->get_attribute_names

Return a reference to a new array of the attribute names currently
specified for the element.  [DOM]

=item $value = $el->get_attribute_ns ($nsurl, $local_name)

Return the value of the attribute with the specified namespace URL and
local name.  If there is no attribute with the specified name,
C<undef> is returned.  [DOM]

=item $attr = $el->get_attribute_node ($name)

Return the L<Web::DOM::Attr> object for the specified attribute.  If
there is no attribute with the specified name, C<undef> is returned.
[DOM]

=item $indexed = $el->manakai_get_attribute_indexed_string_ns ($nsurl, $local_name)

Return the IndexedString
<http://wiki.suikawiki.org/n/manakai%20index%20data%20structures#anchor-1>
representation of the attribute with the specified namespace URL and
local name.  If there is no attribute with the specified name,
C<undef> is returned.  [MANAKAIINDEX]

=item $attr = $el->get_attribute_node_ns ($nsurl, $local_name)

Return the L<Web::DOM::Attr> object for the attribute with the
specified namespace URL and local name.  If there is no attribute with
the specified name, C<undef> is returned.  [DOM]

=item $bool = $el->has_attribute ($name)

Return whether there is the specified attribute or not.  [DOM]

=item $bool = $el->has_attribute_ns ($nsurl, $local_name)

Return whether there is the attribute with the specified namespace URL
and local name or not.  [DOM]

=item $bool = $el->has_attributes

Return whether the element has any content attribute or not.  [DOM]

=item $string = $el->id

=item $el->id ($string)

Return or set the C<id> attribute.  [DOM]

=item $arrayref = $el->manakai_ids

Return the array reference containing the ID of the element, if any,
or the empty array reference, otherwise.  [MANAKAI]

=item $el->insert_adjacent_html ($position, $markup)

Parse the specified string and insert somewhere near the element.  The
first argument must be one of followings: C<beforebegin> (before the
start tag of the element), C<afterbegin> (after the start tag of the
element), C<beforeend> (before the end tag of the element), or
C<afterend> (after the end tag of the element).  The markup must be a
character string in HTML or XML, depending on the type of the
document.  [DOMPARSING]

If the document is an XML document and the given string is not
well-formed, the method throws an exception.

However, even if the document is an XML document and the node can't be
serialized into the well-formed XML fragment, the method does not
throw and does return an ill-formed XML fragment instead.  This is a
willful violation to the HTML Living Standard, to match current
browsers' behavior.  Future version of the module might throw an
exception if browsers start to throw an exception.

See also L<Web::DOM/DEPENDENCY>.

=item $name = $el->local_name

=item $name = $el->manakai_local_name [DEPRECATED]

Return the local name of the element.  [DOM] [MANAKAI]

=item $url = $el->namespace_uri

Return the namespace URL of the element.  If the element does not
belong to any namespace, C<undef> is returned.  [DOM]

=item $string = $el->outer_html

=item $el->outer_html ($string)

Replace the element by the specified fragment of the markup.  The
markup must be a character string in HTML or XML, depending on the
type of the document.  [DOMPARSING]

If the document is an XML document and the given string is not
well-formed, the method throws an exception.

However, even if the document is an XML document and the node can't be
serialized into the well-formed XML fragment, the method does not
throw and does return an ill-formed XML fragment instead.  This is a
willful violation to the HTML Living Standard, to match current
browsers' behavior.  Future version of the module might throw an
exception if browsers start to throw an exception.

See also L<Web::DOM/DEPENDENCY>.

=item $prefix = $el->prefix

=item $el->prefix ($prefix)

If no argument is specified, return the namespace prefix of the
element, if any, or C<undef>.  [DOM]

If the argument is specified, the value is set as the namespace prefix
of the element.  If the value is C<undef>, the namespace prefix is
removed.  [DOMNODEEXODUS] [MANAKAI]

=item $el->remove_attribute ($name)

Remove the attribute with the specified name.  If no attribute is
found, the method does nothing.  [DOM]

=item $el->remove_attribute_ns ($nsurl, $local_name)

Remove the attribute with the specified namespace URL and local name.
If no attribute is found, the method does nothing.  [DOM]

=item $attr = $el->remove_attribute_node ($attr)

Remove the specified attribute from the element.  The removed
attribute is returned.  [DOM]

=item $el->set_attribute ($name => $value)

Set the attribute with the specified name and value.  If there is
already the attribute with the same name, its value is replaced by the
new one.  [DOM]

=item $el->set_attribute_ns ($nsurl, $qname => $value)

=item $el->set_attribute_ns ($nsurl, [$prefix, $local_name] => $value)

Set the attribute with the specified namespace URL, qualified name,
and value.  If there is already the attribute with the same namespace
URL / local name pair, its value is replaced by the new one.  [DOM]

The qualified name can be represented as an array reference, where the
first item is the prefix (or C<undef> for the null namespace) and the
second item is the local name.  [DOMPERL]

=item $el->manakai_set_attribute_indexed_string_ns ($nsurl, $qname => $value)

=item $el->manakai_set_attribute_indexed_string_ns ($nsurl, [$prefix, $local_name] => $value)

Set the attribute with the specified namespace URL, qualified name,
and value represented as an IndexedString
<http://wiki.suikawiki.org/n/manakai%20index%20data%20structures#anchor-1>.
If there is already the attribute with the same namespace URL / local
name pair, its value is replaced by the new one.  [MANAKAIINDEX]

The qualified name can be represented as an array reference, where the
first item is the prefix (or C<undef> for the null namespace) and the
second item is the local name.  [DOMPERL]

=item $old_attr = $el->set_attribute_node ($new_attr)

=item $old_attr = $el->set_attribute_node_ns ($new_attr)

Append (or replace, if exists) the attribute node to the list of
attributes for the element.  If there is already the attribute with
same namespace URL / local name pair, the attribute is removed from
the list and is returned by the method.  [DOM]

=item $name = $el->tag_name

Return the tag name of the element.  [DOM]

=item $name = $el->manakai_tag_name

Return the tag name of the element.  Even when the element is an HTML
element in the HTML document, this method returns the "real" tag name,
without case folding.  [MANAKAI]

=back

Any HTML element uses L<Web::DOM::HTMLElement>, a subclass of this
class.  Most HTML elements have more specific subclasses.  See
L<Web::DOM::HTMLElement> for details.  Likewise, Atom elements use
L<Web::DOM::AtomElement>.

In addition, the obsolete C<manakai_base_uri> method is available.
[DOMDTDEF]

=head1 SPECIFICATIONS

=over 4

=item DOM

DOM Standard <https://dom.spec.whatwg.org/#interface-element>.

=item DOMNODEEXODUS

DOM Living Standard, commented out
<view-source:https://dom.spec.whatwg.org/>.

=item DOMPARSING

DOM Parsing and Serialization <http://domparsing.spec.whatwg.org/>.

=item HTML

HTML Standard
<http://www.whatwg.org/specs/web-apps/current-work/#htmlelement>.

=item DOMDTDEF

DOM Document Type Definitions
<http://suika.suikawiki.org/www/markup/xml/domdtdef/domdtdef>.

=item DOMPERL

manakai's DOM Perl Binding
<http://suika.suikawiki.org/~wakaba/wiki/sw/n/manakai%27s%20DOM%20Perl%20Binding>.

=item MANAKAI

manakai DOM Extensions
<http://suika.suikawiki.org/~wakaba/wiki/sw/n/manakai++DOM%20Extensions>.

=item MANAKAIINDEX

manakai index data structures
<http://wiki.suikawiki.org/n/manakai%20index%20data%20structures>.

=back

=head1 SEE ALSO

L<Web::DOM::Node>, L<Web::DOM::Attr>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2012-2015 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
