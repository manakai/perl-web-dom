=head1 NAME

Web::DOM::Error - |Error| object

=head1 DESCRIPTION

The C<Web::DOM::Error> object represents an error or exception.

This class is intended to be equivalent to ECMAScript C<Error>
objects, modified to be compatible with Perl's convention.

There are also subclasses: L<Web::DOM::Exception> and
L<Web::DOM::TypeError>.

=head1 METHODS

Following methods are available:

=over 4

=item $error = Web::DOM::Error->new ($message)

Create and return a new error object.

If a character string is specified as an argument, the error's
C<message> is set to the argument.  Otherwise, the C<message> is set
to the empty string.

=item $string = $error->name

Return the name of the error, e.g. C<TimeoutError>.

=item $string = $error->message

Return a short message describing the error.  This message can be used
for debugging purpose.  The value returned by this method is
implementation-dependent.  Applications should not rely on the value
returned by this method.

=item $string = $error->file_name

Return the file name of the location of the error.  It is intended to
be a short string similar to C<__FILE__>.

=item $number = $error->line_number

Return the line number, in the file, of the location of the error.  It
is intended to be an integer similar to C<__LINE__>.

=item $string = '' . $error

=item $string = $error->stringify

Stringifying the error object returns the error message with its
location in the Perl standard format (i.e. C<Error message at
path/to/script.pl line 123.\n>).

=item $error = Web::DOM::Error->wrap ($value)

If the argument is an error object (C<< Web::DOM::Error->is_error >>
with that object would return true), return the argument as is.

Otherwise, create and return a new C<Web::DOM::Error> object whose
C<message> is the value obtained by evaluating the argument as a
string (C<Something's wrong> if the value is C<undef> or the empty
string).

=item $boolean = Web::DOM::Error->is_error ($error)

Return whether the argument is an object implementing the Perl Error
Object Interface Level 1 (see L</ERROR OBJECT API>).

=back

=head1 ERROR OBJECT API

A value I<$error> is B<implementing> the Perl Error Object Interface
Level 1 iff all of the following conditions are true:

=over 4

=item C<< $error->name >> returns a string.

The returned value should be a short string identifying the type of
the error.

=item C<< $error->message >> returns a string.

The returned value should be a short English string describing the
error.

=item C<< $error->file_name >> returns a string.

The returned value should be a short string identifying the location
of the Perl script throwing the error.  It should not contain U+000D
or U+000A.

=item C<< $error->line_number >> returns an integer.

The returned value should be a line number identifying the location of
the error within the script denoted by C<< $error->file_name >>.

=item '' . $error (i.e. evaluation as a string) returns a string.

The returned value must end with C< at FILE line LINE.> followed by
C<\n>, where I<FILE> is C<< $error->file_name >> and I<LINE> is C<<
$error->line_number >>.  It should also contain the C<<
$error->message >>.

=item C<< $Web::DOM::Error::L1ObjectClass->{ref $error} >> is true.

=back

An instance of the C<Web::DOM::Error> class is implementing the Perl
Error Object Interface Level 1.

=head1 SEE ALSO

L<Web::DOM::TypeError>.

L<Web::DOM::Exception>.

ECMAScript Error Objects
<https://tc39.github.io/ecma262/#sec-error-objects>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2012-2017 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
